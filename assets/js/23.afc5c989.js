(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{586:function(t,s,a){"use strict";a.r(s);var n=a(13),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"js获取外部样式值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js获取外部样式值"}},[t._v("#")]),t._v(" js获取外部样式值")]),t._v(" "),a("p",[t._v("js获取样式的值，比如获取上边距margin-top,第一时间的做法往往是一下两种")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//jq")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'div'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("css")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"margin-top"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//js")]),t._v("\ndocument"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'div'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("marginTop\n")])])]),a("p",[t._v('然后却会发现最终输出是""或者"0px"，而并非正确的值'),a("br"),t._v("\n在搜索资料后发现，以上两种方法原理都是一样的，都是获取dom对象的style对象，但是问题在于，style对象的样式值，只包含行内的值。"),a("br"),t._v("\n样式包含三种：")]),t._v(" "),a("blockquote",[a("p",[t._v("外部样式，即引入以css为扩展名的文件；\n嵌入式样式，即html内部的style标签所包含的样式\n内联样式，即写在html标签的style属性内的值\n而实际上，大多数情况下，我们需要的是外部样式的值。而通过style对象，能获取只有第三种也就是内样样式值。"),a("br"),t._v("\n因此，我们需要另外的方法。")])]),t._v(" "),a("h3",{attrs:{id:"getcomputedstyle方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getcomputedstyle方法"}},[t._v("#")]),t._v(" getComputedStyle方法")]),t._v(" "),a("p",[t._v("Window.getComputedStyle()方法返回一个对象，该对象在应用活动样式表并解析这些值可能包含的任何基本计算后报告元素的所有CSS属性的值。 私有的CSS属性值可以通过对象提供的API或通过简单地使用CSS属性名称进行索引来访问"),a("br"),t._v("\n这是MDN上对getComputedStyle方法的解释。简单来说，就是可以获取最终计算后的样式值"),a("br"),t._v("\n官方介绍的语法是：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" style "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getComputedStyle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("element"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("pseudoElt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"element"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#element"}},[t._v("#")]),t._v(" element")]),t._v(" "),a("blockquote",[a("p",[t._v("用于获取计算样式的Element。")])]),t._v(" "),a("h4",{attrs:{id:"pseudoelt-可选"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pseudoelt-可选"}},[t._v("#")]),t._v(" pseudoElt 可选")]),t._v(" "),a("blockquote",[a("p",[t._v("指定一个要匹配的伪元素的字符串。必须对普通元素省略（或null）。\ngetComputedStyle方法会返回一个对象，这个对象包含某个节点的所有style的计算值。并且这个对象有个方法--getPropertyValue，会返回某一个css属性的值，具体代码如下：")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" box "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#box"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nwindow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getComputedStyle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("box"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPropertyValue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"margin-top"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//同样支持驼峰式marginTop写法")]),t._v("\n")])])]),a("p",[t._v("但要注意的是，该方法只能获取，无法设置。在样式改变后，getComputedStyle返回的style对象会实时更新。getPropertyValue里的值，在使用简写如“font”时，可能会辉县兼容性问题")])])}),[],!1,null,null,null);s.default=e.exports}}]);
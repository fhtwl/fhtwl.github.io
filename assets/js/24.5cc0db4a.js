(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{587:function(e,l,r){"use strict";r.r(l);var t=r(13),s=Object(t.a)({},(function(){var e=this,l=e.$createElement,r=e._self._c||l;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("p",[e._v("promise.all和Promise.allSettled的参数, 都是一个promise的数组, 都会在多个promise全部执行完成后执行回调,")]),e._v(" "),r("p",[e._v("区别是:")]),e._v(" "),r("ul",[r("li",[r("p",[e._v("promise.all是在所有promise的resolve后, 才会进入then回调.否则, 只要有一个reject, 就会直接进入catch回调.这意味着, 当promise数组中任何一个promise失败后, 其它的promise都会失去意义")])]),e._v(" "),r("li",[r("p",[e._v("promise.allSettled则可以获取数组里每个promise的结果, 无论这些结果是否是reject. 这些结果之间不会互相影响")])])]),e._v(" "),r("p",[e._v("promise.all适合promise间相互依赖, 结果会互相影响的场景"),r("br"),e._v("\npromise.allSettled适合promise间互相无关联的场景")])])}),[],!1,null,null,null);l.default=s.exports}}]);